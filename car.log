2017-07-12 19:27:57 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-07-12 19:28:26 DEBUG DriverManagerConnectionProviderImpl:51 - Connection pool now considered primed; min-size will be maintained
2017-07-12 19:29:10 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-07-12 19:29:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-07-12 19:29:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-07-12 19:29:10 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-07-12 19:29:10 INFO  Version:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-07-12 19:29:10 INFO  Environment:213 - HHH000206: hibernate.properties not found
2017-07-12 19:29:11 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2017-07-12 19:29:11 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:29:11 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-07-12 19:29:11 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
2017-07-12 19:29:11 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-07-12 19:29:11 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2017-07-12 19:29:11 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-07-12 19:29:11 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-07-12 19:29:11 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2017-07-12 19:29:11 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:29:11 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=hibernate/mapping/jeep.hbm.xml,type=RESOURCE)
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f217633
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4738a206
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1af2d44a
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e1a0406
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6253c26
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d86a6f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@298a5e20
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69e153c5
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@117159c0
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@235ecd9f
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:29:14 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3a7442c7
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@cb0755b
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@606e4010
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70ed52de
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7188af83
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a003cbe
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61c4eee0
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f10d5b6
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1040be71
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@548a24a
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@433defed
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a693f59
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f4faf53
2017-07-12 19:29:15 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fd50002
2017-07-12 19:29:15 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-07-12 19:29:15 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/rt]
2017-07-12 19:29:15 INFO  pooling:132 - HHH10001001: Connection properties: {user=root, password=admin}
2017-07-12 19:29:15 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-07-12 19:29:15 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2017-07-12 19:29:15 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-07-12 19:29:16 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.18-log
      major : 5
      minor : 7
2017-07-12 19:29:16 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.42 ( Revision: 1f61b0b0270d9844b006572ba4e77f19c0f230d4 )
      major : 5
      minor : 1
2017-07-12 19:29:16 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2017-07-12 19:29:16 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-07-12 19:29:16 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-07-12 19:29:16 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:29:17 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-07-12 19:29:17 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-07-12 19:29:46 DEBUG DriverManagerConnectionProviderImpl:51 - Connection pool now considered primed; min-size will be maintained
2017-07-12 19:31:14 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-07-12 19:31:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-07-12 19:31:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-07-12 19:31:14 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-07-12 19:31:15 INFO  Version:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-07-12 19:31:15 INFO  Environment:213 - HHH000206: hibernate.properties not found
2017-07-12 19:31:15 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2017-07-12 19:31:15 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:31:15 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-07-12 19:31:15 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
2017-07-12 19:31:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-07-12 19:31:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2017-07-12 19:31:15 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-07-12 19:31:15 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-07-12 19:31:15 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2017-07-12 19:31:15 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:31:15 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=hibernate/mapping/jeep.hbm.xml,type=RESOURCE)
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f217633
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4738a206
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1af2d44a
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e1a0406
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6253c26
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d86a6f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@298a5e20
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69e153c5
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@117159c0
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@235ecd9f
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3a7442c7
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@cb0755b
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@606e4010
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70ed52de
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7188af83
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a003cbe
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61c4eee0
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f10d5b6
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1040be71
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@548a24a
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@433defed
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a693f59
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f4faf53
2017-07-12 19:31:18 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fd50002
2017-07-12 19:31:18 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-07-12 19:31:18 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/rt]
2017-07-12 19:31:18 INFO  pooling:132 - HHH10001001: Connection properties: {user=root, password=admin}
2017-07-12 19:31:18 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-07-12 19:31:18 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2017-07-12 19:31:18 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-07-12 19:31:19 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.18-log
      major : 5
      minor : 7
2017-07-12 19:31:19 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.42 ( Revision: 1f61b0b0270d9844b006572ba4e77f19c0f230d4 )
      major : 5
      minor : 1
2017-07-12 19:31:19 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2017-07-12 19:31:19 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-07-12 19:31:19 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-07-12 19:31:19 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:31:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-07-12 19:31:19 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-07-12 19:31:49 DEBUG DriverManagerConnectionProviderImpl:51 - Connection pool now considered primed; min-size will be maintained
2017-07-12 19:34:32 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-07-12 19:34:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-07-12 19:34:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-07-12 19:34:32 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-07-12 19:34:32 INFO  Version:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-07-12 19:34:32 INFO  Environment:213 - HHH000206: hibernate.properties not found
2017-07-12 19:34:33 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2017-07-12 19:34:33 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:34:33 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-07-12 19:34:33 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
2017-07-12 19:34:33 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-07-12 19:34:33 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2017-07-12 19:34:33 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-07-12 19:34:33 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-07-12 19:34:33 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2017-07-12 19:34:33 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:34:33 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=hibernate/mapping/jeep.hbm.xml,type=RESOURCE)
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f217633
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4738a206
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1af2d44a
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e1a0406
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6253c26
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d86a6f
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:34:35 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@298a5e20
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69e153c5
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@117159c0
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@235ecd9f
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3a7442c7
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@cb0755b
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@606e4010
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70ed52de
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7188af83
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a003cbe
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61c4eee0
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f10d5b6
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1040be71
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@548a24a
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@433defed
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a693f59
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f4faf53
2017-07-12 19:34:36 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fd50002
2017-07-12 19:34:36 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-07-12 19:34:36 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/rt]
2017-07-12 19:34:36 INFO  pooling:132 - HHH10001001: Connection properties: {user=root, password=admin}
2017-07-12 19:34:36 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-07-12 19:34:36 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2017-07-12 19:34:36 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-07-12 19:34:36 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.18-log
      major : 5
      minor : 7
2017-07-12 19:34:36 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.42 ( Revision: 1f61b0b0270d9844b006572ba4e77f19c0f230d4 )
      major : 5
      minor : 1
2017-07-12 19:34:36 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2017-07-12 19:34:36 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-07-12 19:34:36 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-07-12 19:34:36 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:34:36 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-07-12 19:34:36 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-07-12 19:34:36 DEBUG AnnotationMetadataSourceProcessorImpl:128 - Encountered a non-categorized annotated class [com.kr.entity.Jeep]; ignoring
2017-07-12 19:34:36 DEBUG ModelBinder:230 - Mapping class: com.kr.entity.Jeep -> Car
2017-07-12 19:34:37 DEBUG ModelBinder:2502 - Mapped property: Id -> [id]
2017-07-12 19:34:37 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [car]
2017-07-12 19:34:37 DEBUG ModelBinder:2502 - Mapped property: model -> [model]
2017-07-12 19:34:37 DEBUG ModelBinder:2502 - Mapped property: color -> [color]
2017-07-12 19:34:37 DEBUG ModelBinder:2502 - Mapped property: price -> [price]
2017-07-12 19:34:37 DEBUG SessionFactoryImpl:199 - Building session factory
2017-07-12 19:34:37 DEBUG Settings:69 - SessionFactory name : null
2017-07-12 19:34:37 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
2017-07-12 19:34:37 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
2017-07-12 19:34:37 DEBUG Settings:73 - Statistics: disabled
2017-07-12 19:34:37 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
2017-07-12 19:34:37 DEBUG Settings:76 - Default entity-mode: pojo
2017-07-12 19:34:37 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-07-12 19:34:37 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
2017-07-12 19:34:37 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
2017-07-12 19:34:37 DEBUG Settings:81 - Default batch fetch size: -1
2017-07-12 19:34:37 DEBUG Settings:82 - Maximum outer join fetch depth: 2
2017-07-12 19:34:37 DEBUG Settings:83 - Default null ordering: NONE
2017-07-12 19:34:37 DEBUG Settings:84 - Order SQL updates by primary key: disabled
2017-07-12 19:34:37 DEBUG Settings:85 - Order SQL inserts for batching: disabled
2017-07-12 19:34:37 DEBUG Settings:87 - multi-tenancy strategy : NONE
2017-07-12 19:34:37 DEBUG Settings:89 - JTA Track by Thread: enabled
2017-07-12 19:34:37 DEBUG Settings:91 - Query language substitutions: {}
2017-07-12 19:34:37 DEBUG Settings:92 - JPA query language strict compliance: disabled
2017-07-12 19:34:37 DEBUG Settings:93 - Named query checking : enabled
2017-07-12 19:34:37 DEBUG Settings:95 - Second-level cache: enabled
2017-07-12 19:34:37 DEBUG Settings:96 - Second-level query cache: disabled
2017-07-12 19:34:37 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@75f95314
2017-07-12 19:34:37 DEBUG Settings:98 - Second-level cache region prefix: null
2017-07-12 19:34:37 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2017-07-12 19:34:37 DEBUG Settings:100 - Structured second-level cache entries: disabled
2017-07-12 19:34:37 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2017-07-12 19:34:37 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2017-07-12 19:34:37 DEBUG Settings:104 - JDBC batch size: 15
2017-07-12 19:34:37 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2017-07-12 19:34:37 DEBUG Settings:106 - Scrollable result sets: enabled
2017-07-12 19:34:37 DEBUG Settings:107 - Wrap result sets: disabled
2017-07-12 19:34:37 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2017-07-12 19:34:37 DEBUG Settings:109 - JDBC result set fetch size: null
2017-07-12 19:34:37 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2017-07-12 19:34:37 DEBUG Settings:111 - Generate SQL with comments: disabled
2017-07-12 19:34:37 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
2017-07-12 19:34:37 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\kakar\Desktop\notes ksquare\carDealer\target\classes;C:\Users\kakar\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\kakar\.m2\repository\mysql\mysql-connector-java\5.1.42\mysql-connector-java-5.1.42.jar;C:\Users\kakar\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\kakar\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\kakar\.m2\repository\org\hibernate\hibernate-core\5.2.10.Final\hibernate-core-5.2.10.Final.jar;C:\Users\kakar\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\kakar\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\kakar\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\kakar\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\kakar\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\kakar\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\kakar\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\kakar\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\kakar\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\kakar\.m2\repository\org\hibernate\hibernate-validator\5.4.1.Final\hibernate-validator-5.4.1.Final.jar;C:\Users\kakar\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin, sun.java.command=com.kr.entity.testHib, sun.cpu.endian=little, user.home=C:\Users\kakar, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_131\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_131-b11, user.name=kakar, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/rt, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\kakar\AppData\Local\Temp\, java.version=1.8.0_131, user.dir=C:\Users\kakar\Desktop\notes ksquare\carDealer, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2a5b3fee, java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Program Fules\Java\jdk1.8.0_101\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\MySQL\MySQL Server 5.7\bin;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Users\kakar\AppData\Local\Programs\Python\Python36-32\Scripts\;C:\Users\kakar\AppData\Local\Programs\Python\Python36-32\;C:\Users\kakar\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Microsoft VS Code\bin;;C:\Users\kakar\Desktop;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.131-b11, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-07-12 19:34:37 INFO  Version:30 - HV000001: Hibernate Validator 5.4.1.Final
2017-07-12 19:34:37 DEBUG DefaultTraversableResolver:103 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2017-07-12 19:34:37 DEBUG DefaultTraversableResolver:114 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2017-07-12 19:34:37 DEBUG ValidationXmlParser:103 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2017-07-12 19:34:37 DEBUG ResourceLoaderHelper:58 - Trying to load META-INF/validation.xml via TCCL
2017-07-12 19:34:37 DEBUG ResourceLoaderHelper:64 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2017-07-12 19:34:37 DEBUG ValidationXmlParser:110 - No META-INF/validation.xml found. Using annotation based configuration only.
2017-07-12 19:34:37 DEBUG TypeSafeActivator:94 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-07-12 19:34:37 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2017-07-12 19:34:37 DEBUG SessionFactoryImpl:294 - Instantiated session factory
2017-07-12 19:34:37 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [com.kr.entity.Jeep] is safe
2017-07-12 19:34:37 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kr.entity.Jeep
2017-07-12 19:34:38 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [com.kr.entity.Jeep] is safe
2017-07-12 19:34:38 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kr.entity.Jeep
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:3598 - Static SQL for entity: com.kr.entity.Jeep
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:3603 -  Version select: select id from Car where id =?
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:3606 -  Snapshot select: select jeep_.id, jeep_.model as model2_0_, jeep_.color as color3_0_, jeep_.price as price4_0_ from Car jeep_ where jeep_.id=?
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into Car (model, color, price, id) values (?, ?, ?, ?)
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:394 -  Update 0: update Car set model=?, color=?, price=? where id=?
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from Car where id=?
2017-07-12 19:34:38 DEBUG AbstractEntityPersister:3614 -  Identity insert: insert into Car (model, color, price) values (?, ?, ?)
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1849db1a]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [NONE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=?
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71c5b236]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [READ]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=?
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7a7219]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [UPGRADE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? for update
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a1d593e]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [UPGRADE_NOWAIT]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? for update
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361c294e]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [UPGRADE_SKIPLOCKED]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? for update
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285d851a]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [FORCE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? for update
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664a9613]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [PESSIMISTIC_READ]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? lock in share mode
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a902e7]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [PESSIMISTIC_WRITE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? for update
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3e3e8b]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [PESSIMISTIC_FORCE_INCREMENT]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=? for update
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71104a4]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [OPTIMISTIC]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=?
2017-07-12 19:34:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f46e16]
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:34:38 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:34:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:34:38 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:34:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:34:38 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [OPTIMISTIC_FORCE_INCREMENT]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=?
2017-07-12 19:34:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.kr.entity.Jeep: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=?
2017-07-12 19:34:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.kr.entity.Jeep: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from Car jeep0_ where jeep0_.id=?
2017-07-12 19:34:39 DEBUG SchemaManagementToolCoordinator:56 - No actions specified; doing nothing
2017-07-12 19:34:39 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
2017-07-12 19:34:39 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-07-12 19:34:39 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-07-12 19:34:39 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2017-07-12 19:34:39 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2017-07-12 19:34:39 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eef9aef
2017-07-12 19:34:39 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 818a7dc5-a5ab-46e2-a5ab-3e43e5be1450 (<unnamed>)
2017-07-12 19:34:39 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-07-12 19:34:39 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
2017-07-12 19:34:39 DEBUG TransactionImpl:55 - begin
2017-07-12 19:34:39 DEBUG ActionQueue:279 - Executing identity-insert immediately
2017-07-12 19:34:39 DEBUG SQL:92 - insert into Car (model, color, price) values (?, ?, ?)
2017-07-12 19:34:39 DEBUG SqlExceptionHelper:124 - could not execute statement [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'rt.car' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2490)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2079)
	at com.mysql.jdbc.PreparedStatement.executeUpdateInternal(PreparedStatement.java:2013)
	at com.mysql.jdbc.PreparedStatement.executeLargeUpdate(PreparedStatement.java:5104)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:1998)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:205)
	at org.hibernate.dialect.identity.GetGeneratedKeysDelegate.executeAndExtract(GetGeneratedKeysDelegate.java:57)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:42)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2909)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3480)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:81)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:626)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:280)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:261)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:306)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:318)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:275)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:182)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:113)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.saveWithGeneratedOrRequestedId(DefaultSaveOrUpdateEventListener.java:192)
	at org.hibernate.event.internal.DefaultSaveEventListener.saveWithGeneratedOrRequestedId(DefaultSaveEventListener.java:38)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.entityIsTransient(DefaultSaveOrUpdateEventListener.java:177)
	at org.hibernate.event.internal.DefaultSaveEventListener.performSaveOrUpdate(DefaultSaveEventListener.java:32)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:73)
	at org.hibernate.internal.SessionImpl.fireSave(SessionImpl.java:689)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:681)
	at org.hibernate.internal.SessionImpl.save(SessionImpl.java:676)
	at com.kr.entity.testHib.main(testHib.java:16)
2017-07-12 19:34:39 WARN  SqlExceptionHelper:129 - SQL Error: 1146, SQLState: 42S02
2017-07-12 19:34:39 ERROR SqlExceptionHelper:131 - Table 'rt.car' doesn't exist
2017-07-12 19:35:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2017-07-12 19:35:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2017-07-12 19:35:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2017-07-12 19:35:21 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2017-07-12 19:35:21 INFO  Version:45 - HHH000412: Hibernate Core {5.2.10.Final}
2017-07-12 19:35:21 INFO  Environment:213 - HHH000206: hibernate.properties not found
2017-07-12 19:35:21 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [null] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2017-07-12 19:35:21 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:35:21 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2017-07-12 19:35:22 DEBUG Configuration:724 - Building session factory using internal StandardServiceRegistryBuilder
2017-07-12 19:35:22 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2017-07-12 19:35:22 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2017-07-12 19:35:22 DEBUG RegionFactoryInitiator:75 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2017-07-12 19:35:22 INFO  Version:66 - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-07-12 19:35:22 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD//EN] - [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2017-07-12 19:35:22 DEBUG LocalXmlResourceResolver:59 - Recognized hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
2017-07-12 19:35:22 DEBUG MappingBinder:58 - Performing JAXB binding of hbm.xml document : Origin(name=hibernate/mapping/jeep.hbm.xml,type=RESOURCE)
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3b6ddd1d
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2f217633
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4738a206
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1af2d44a
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d7148e2
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration char -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@21e360a
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6fd83fc1
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration int -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1b2abca6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d0a1059
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37d4349f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3c7f66c4
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e11f9e9
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@32502377
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration string -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.String -> org.hibernate.type.StringType@21282ed8
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1e1a0406
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6253c26
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration url -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@659499f1
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4310d43
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@783a467b
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@242b836
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4f80542f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2e3967ea
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@51c668e3
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4a883b15
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2794eab6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c7696c6
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a6d8329
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3c77d488
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d86a6f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3e27aa33
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@298a5e20
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@26d9b808
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@54c5a2ff
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6e6f2380
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1530c739
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@470734c3
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69e153c5
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration binary -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration byte[] -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration [B -> org.hibernate.type.BinaryType@76b1e9b8
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@793f29ff
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration row_version -> org.hibernate.type.RowVersionType@117159c0
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration image -> org.hibernate.type.ImageType@235ecd9f
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration characters -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration char[] -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration [C -> org.hibernate.type.CharArrayType@74d1dc36
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:35:24 DEBUG BasicTypeRegistry:145 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@19e4653c
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration text -> org.hibernate.type.TextType@3a7442c7
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration ntext -> org.hibernate.type.NTextType@cb0755b
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@72035809
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@606e4010
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1caa0244
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration nclob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@8462f31
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@70ed52de
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7188af83
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration serializable -> org.hibernate.type.SerializableType@4a003cbe
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1972e513
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61c4eee0
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f10d5b6
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1040be71
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@548a24a
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@433defed
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a693f59
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f4faf53
2017-07-12 19:35:25 DEBUG BasicTypeRegistry:145 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7fd50002
2017-07-12 19:35:25 WARN  pooling:70 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2017-07-12 19:35:25 INFO  pooling:126 - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/rt]
2017-07-12 19:35:25 INFO  pooling:132 - HHH10001001: Connection properties: {user=root, password=admin}
2017-07-12 19:35:25 INFO  pooling:140 - HHH10001003: Autocommit mode: false
2017-07-12 19:35:25 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2017-07-12 19:35:25 INFO  DriverManagerConnectionProviderImpl:41 - HHH000115: Hibernate connection pool size: 20 (min=1)
2017-07-12 19:35:25 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : MySQL
    version : 5.7.18-log
      major : 5
      minor : 7
2017-07-12 19:35:25 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.42 ( Revision: 1f61b0b0270d9844b006572ba4e77f19c0f230d4 )
      major : 5
      minor : 1
2017-07-12 19:35:25 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2017-07-12 19:35:25 INFO  Dialect:157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2017-07-12 19:35:25 DEBUG IdentifierHelperBuilder:117 - JDBC driver metadata reported database stores quoted identifiers in more than one case
2017-07-12 19:35:25 DEBUG IdentifierHelperBuilder:191 - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2017-07-12 19:35:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2017-07-12 19:35:26 DEBUG Namespace:47 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2017-07-12 19:35:26 DEBUG AnnotationMetadataSourceProcessorImpl:128 - Encountered a non-categorized annotated class [com.kr.entity.Jeep]; ignoring
2017-07-12 19:35:26 DEBUG ModelBinder:230 - Mapping class: com.kr.entity.Jeep -> jeep
2017-07-12 19:35:26 DEBUG ModelBinder:2502 - Mapped property: Id -> [id]
2017-07-12 19:35:26 DEBUG PrimaryKey:35 - Forcing column [id] to be non-null as it is part of the primary key for table [jeep]
2017-07-12 19:35:26 DEBUG ModelBinder:2502 - Mapped property: model -> [model]
2017-07-12 19:35:26 DEBUG ModelBinder:2502 - Mapped property: color -> [color]
2017-07-12 19:35:26 DEBUG ModelBinder:2502 - Mapped property: price -> [price]
2017-07-12 19:35:26 DEBUG SessionFactoryImpl:199 - Building session factory
2017-07-12 19:35:26 DEBUG Settings:69 - SessionFactory name : null
2017-07-12 19:35:26 DEBUG Settings:70 - Automatic flush during beforeCompletion(): enabled
2017-07-12 19:35:26 DEBUG Settings:71 - Automatic session close at end of transaction: disabled
2017-07-12 19:35:26 DEBUG Settings:73 - Statistics: disabled
2017-07-12 19:35:26 DEBUG Settings:75 - Deleted entity synthetic identifier rollback: disabled
2017-07-12 19:35:26 DEBUG Settings:76 - Default entity-mode: pojo
2017-07-12 19:35:26 DEBUG Settings:77 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2017-07-12 19:35:26 DEBUG Settings:78 - Allow initialization of lazy state outside session : disabled
2017-07-12 19:35:26 DEBUG Settings:80 - Using BatchFetchStyle : LEGACY
2017-07-12 19:35:26 DEBUG Settings:81 - Default batch fetch size: -1
2017-07-12 19:35:26 DEBUG Settings:82 - Maximum outer join fetch depth: 2
2017-07-12 19:35:26 DEBUG Settings:83 - Default null ordering: NONE
2017-07-12 19:35:26 DEBUG Settings:84 - Order SQL updates by primary key: disabled
2017-07-12 19:35:26 DEBUG Settings:85 - Order SQL inserts for batching: disabled
2017-07-12 19:35:26 DEBUG Settings:87 - multi-tenancy strategy : NONE
2017-07-12 19:35:26 DEBUG Settings:89 - JTA Track by Thread: enabled
2017-07-12 19:35:26 DEBUG Settings:91 - Query language substitutions: {}
2017-07-12 19:35:26 DEBUG Settings:92 - JPA query language strict compliance: disabled
2017-07-12 19:35:26 DEBUG Settings:93 - Named query checking : enabled
2017-07-12 19:35:26 DEBUG Settings:95 - Second-level cache: enabled
2017-07-12 19:35:26 DEBUG Settings:96 - Second-level query cache: disabled
2017-07-12 19:35:26 DEBUG Settings:97 - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@75f95314
2017-07-12 19:35:26 DEBUG Settings:98 - Second-level cache region prefix: null
2017-07-12 19:35:26 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2017-07-12 19:35:26 DEBUG Settings:100 - Structured second-level cache entries: disabled
2017-07-12 19:35:26 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2017-07-12 19:35:26 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2017-07-12 19:35:26 DEBUG Settings:104 - JDBC batch size: 15
2017-07-12 19:35:26 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2017-07-12 19:35:26 DEBUG Settings:106 - Scrollable result sets: enabled
2017-07-12 19:35:26 DEBUG Settings:107 - Wrap result sets: disabled
2017-07-12 19:35:26 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2017-07-12 19:35:26 DEBUG Settings:109 - JDBC result set fetch size: null
2017-07-12 19:35:26 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2017-07-12 19:35:26 DEBUG Settings:111 - Generate SQL with comments: disabled
2017-07-12 19:35:26 DEBUG SessionFactoryImpl:254 - Session factory constructed with filter configurations : {}
2017-07-12 19:35:26 DEBUG SessionFactoryImpl:255 - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\kakar\Desktop\notes ksquare\carDealer\target\classes;C:\Users\kakar\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\kakar\.m2\repository\mysql\mysql-connector-java\5.1.42\mysql-connector-java-5.1.42.jar;C:\Users\kakar\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\kakar\.m2\repository\com\googlecode\json-simple\json-simple\1.1.1\json-simple-1.1.1.jar;C:\Users\kakar\.m2\repository\org\hibernate\hibernate-core\5.2.10.Final\hibernate-core-5.2.10.Final.jar;C:\Users\kakar\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\kakar\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\kakar\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\kakar\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\kakar\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\kakar\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\kakar\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\kakar\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\kakar\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\kakar\.m2\repository\org\hibernate\hibernate-validator\5.4.1.Final\hibernate-validator-5.4.1.Final.jar;C:\Users\kakar\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_131\jre\bin, sun.java.command=com.kr.entity.testHib, sun.cpu.endian=little, user.home=C:\Users\kakar, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_131\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_131\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_131\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_131\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_131-b11, user.name=kakar, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/rt, file.encoding=Cp1252, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\kakar\AppData\Local\Temp\, java.version=1.8.0_131, user.dir=C:\Users\kakar\Desktop\notes ksquare\carDealer, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2a5b3fee, java.library.path=C:\Program Files\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Program Fules\Java\jdk1.8.0_101\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\Program Files\MySQL\MySQL Server 5.7\bin;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;C:\Users\kakar\AppData\Local\Programs\Python\Python36-32\Scripts\;C:\Users\kakar\AppData\Local\Programs\Python\Python36-32\;C:\Users\kakar\AppData\Local\Microsoft\WindowsApps;C:\Program Files (x86)\Microsoft VS Code\bin;;C:\Users\kakar\Desktop;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.131-b11, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
2017-07-12 19:35:26 INFO  Version:30 - HV000001: Hibernate Validator 5.4.1.Final
2017-07-12 19:35:26 DEBUG DefaultTraversableResolver:103 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2017-07-12 19:35:26 DEBUG DefaultTraversableResolver:114 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2017-07-12 19:35:26 DEBUG ValidationXmlParser:103 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2017-07-12 19:35:26 DEBUG ResourceLoaderHelper:58 - Trying to load META-INF/validation.xml via TCCL
2017-07-12 19:35:26 DEBUG ResourceLoaderHelper:64 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2017-07-12 19:35:26 DEBUG ValidationXmlParser:110 - No META-INF/validation.xml found. Using annotation based configuration only.
2017-07-12 19:35:26 DEBUG TypeSafeActivator:94 - Unable to acquire Bean Validation ValidatorFactory, skipping activation
2017-07-12 19:35:26 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2017-07-12 19:35:26 DEBUG SessionFactoryImpl:294 - Instantiated session factory
2017-07-12 19:35:26 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [com.kr.entity.Jeep] is safe
2017-07-12 19:35:26 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kr.entity.Jeep
2017-07-12 19:35:26 DEBUG ClassLoaderAccessImpl:55 - Not known whether passed class name [com.kr.entity.Jeep] is safe
2017-07-12 19:35:26 DEBUG ClassLoaderAccessImpl:57 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.kr.entity.Jeep
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:3598 - Static SQL for entity: com.kr.entity.Jeep
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:3603 -  Version select: select id from jeep where id =?
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:3606 -  Snapshot select: select jeep_.id, jeep_.model as model2_0_, jeep_.color as color3_0_, jeep_.price as price4_0_ from jeep jeep_ where jeep_.id=?
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into jeep (model, color, price, id) values (?, ?, ?, ?)
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:394 -  Update 0: update jeep set model=?, color=?, price=? where id=?
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from jeep where id=?
2017-07-12 19:35:26 DEBUG AbstractEntityPersister:3614 -  Identity insert: insert into jeep (model, color, price) values (?, ?, ?)
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1849db1a]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [NONE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=?
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71c5b236]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [READ]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=?
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f7a7219]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [UPGRADE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? for update
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a1d593e]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [UPGRADE_NOWAIT]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? for update
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@361c294e]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [UPGRADE_SKIPLOCKED]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? for update
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285d851a]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [FORCE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? for update
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@664a9613]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [PESSIMISTIC_READ]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? lock in share mode
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15a902e7]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [PESSIMISTIC_WRITE]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? for update
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3e3e8b]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [PESSIMISTIC_FORCE_INCREMENT]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=? for update
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71104a4]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [OPTIMISTIC]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=?
2017-07-12 19:35:26 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f46e16]
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : model
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : color
2017-07-12 19:35:26 DEBUG MetamodelGraphWalker:137 - Visiting attribute path : price
2017-07-12 19:35:26 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2017-07-12 19:35:26 DEBUG LoadQueryJoinAndFetchProcessor:101 - processing queryspace <gen:0>
2017-07-12 19:35:26 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.kr.entity.Jeep)
    - Returns
       - EntityReturnImpl(entity=com.kr.entity.Jeep, querySpaceUid=<gen:0>, path=com.kr.entity.Jeep)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.kr.entity.Jeep)
          - SQL table alias mapping - jeep0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2017-07-12 19:35:26 DEBUG EntityLoader:115 - Static select for entity com.kr.entity.Jeep [OPTIMISTIC_FORCE_INCREMENT]: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=?
2017-07-12 19:35:27 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.kr.entity.Jeep: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=?
2017-07-12 19:35:27 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.kr.entity.Jeep: select jeep0_.id as id1_0_0_, jeep0_.model as model2_0_0_, jeep0_.color as color3_0_0_, jeep0_.price as price4_0_0_ from jeep jeep0_ where jeep0_.id=?
2017-07-12 19:35:27 DEBUG SchemaManagementToolCoordinator:56 - No actions specified; doing nothing
2017-07-12 19:35:27 DEBUG JtaPlatformInitiator:42 - No JtaPlatform was specified, checking resolver
2017-07-12 19:35:27 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2017-07-12 19:35:27 DEBUG StandardJtaPlatformResolver:102 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2017-07-12 19:35:27 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2017-07-12 19:35:27 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2017-07-12 19:35:27 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eef9aef
2017-07-12 19:35:27 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 954cf9c5-e478-4ed1-8195-0666dd66c168 (<unnamed>)
2017-07-12 19:35:27 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2017-07-12 19:35:27 DEBUG StatisticsInitiator:82 - Statistics initialized [enabled=false]
2017-07-12 19:35:27 DEBUG TransactionImpl:55 - begin
2017-07-12 19:35:27 DEBUG ActionQueue:279 - Executing identity-insert immediately
2017-07-12 19:35:27 DEBUG SQL:92 - insert into jeep (model, color, price) values (?, ?, ?)
2017-07-12 19:35:27 DEBUG IdentifierGeneratorHelper:78 - Natively generated identity: 4
2017-07-12 19:35:27 DEBUG ResourceRegistryStandardImpl:104 - HHH000387: ResultSet's statement was not registered
2017-07-12 19:35:27 DEBUG TransactionImpl:66 - committing
2017-07-12 19:35:27 DEBUG AbstractFlushingEventListener:132 - Processing flush-time cascades
2017-07-12 19:35:27 DEBUG AbstractFlushingEventListener:174 - Dirty checking collections
2017-07-12 19:35:27 DEBUG AbstractFlushingEventListener:106 - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2017-07-12 19:35:27 DEBUG AbstractFlushingEventListener:113 - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2017-07-12 19:35:27 DEBUG EntityPrinter:102 - Listing entities:
2017-07-12 19:35:27 DEBUG EntityPrinter:109 - com.kr.entity.Jeep{color=Black, price=20000, model=wrangler, Id=4}
2017-07-12 19:35:27 DEBUG LogicalConnectionManagedImpl:170 - Initiating JDBC connection release from afterTransaction
2017-07-12 19:35:27 DEBUG LogicalConnectionManagedImpl:170 - Initiating JDBC connection release from afterTransaction
2017-07-12 19:35:55 DEBUG DriverManagerConnectionProviderImpl:51 - Connection pool now considered primed; min-size will be maintained
